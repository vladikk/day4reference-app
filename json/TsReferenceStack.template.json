{
 "Resources": {
  "MyVPCAFB07A31": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/Resource"
   }
  },
  "MyVPCPublicSubnet1Subnet0C75866A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PublicSubnet1/Subnet"
   }
  },
  "MyVPCPublicSubnet1RouteTable538A9511": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PublicSubnet1/RouteTable"
   }
  },
  "MyVPCPublicSubnet1RouteTableAssociation8A950D8E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVPCPublicSubnet1RouteTable538A9511"
    },
    "SubnetId": {
     "Ref": "MyVPCPublicSubnet1Subnet0C75866A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PublicSubnet1/RouteTableAssociation"
   }
  },
  "MyVPCPublicSubnet1DefaultRouteAF81AA9B": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVPCIGW30AB6DD6"
    },
    "RouteTableId": {
     "Ref": "MyVPCPublicSubnet1RouteTable538A9511"
    }
   },
   "DependsOn": [
    "MyVPCVPCGWE6F260E1"
   ],
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PublicSubnet1/DefaultRoute"
   }
  },
  "MyVPCPublicSubnet1EIP5EB6147D": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PublicSubnet1/EIP"
   }
  },
  "MyVPCPublicSubnet1NATGateway838228A5": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MyVPCPublicSubnet1EIP5EB6147D",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MyVPCPublicSubnet1Subnet0C75866A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "MyVPCPublicSubnet1DefaultRouteAF81AA9B",
    "MyVPCPublicSubnet1RouteTableAssociation8A950D8E"
   ],
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PublicSubnet1/NATGateway"
   }
  },
  "MyVPCPublicSubnet2Subnet4DDFF14C": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PublicSubnet2/Subnet"
   }
  },
  "MyVPCPublicSubnet2RouteTableA6A1CD3D": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PublicSubnet2/RouteTable"
   }
  },
  "MyVPCPublicSubnet2RouteTableAssociationF22D63CA": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVPCPublicSubnet2RouteTableA6A1CD3D"
    },
    "SubnetId": {
     "Ref": "MyVPCPublicSubnet2Subnet4DDFF14C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PublicSubnet2/RouteTableAssociation"
   }
  },
  "MyVPCPublicSubnet2DefaultRoute24460202": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVPCIGW30AB6DD6"
    },
    "RouteTableId": {
     "Ref": "MyVPCPublicSubnet2RouteTableA6A1CD3D"
    }
   },
   "DependsOn": [
    "MyVPCVPCGWE6F260E1"
   ],
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PublicSubnet2/DefaultRoute"
   }
  },
  "MyVPCPublicSubnet2EIP6F364C5D": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PublicSubnet2/EIP"
   }
  },
  "MyVPCPublicSubnet2NATGateway4D6E78B8": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MyVPCPublicSubnet2EIP6F364C5D",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MyVPCPublicSubnet2Subnet4DDFF14C"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "MyVPCPublicSubnet2DefaultRoute24460202",
    "MyVPCPublicSubnet2RouteTableAssociationF22D63CA"
   ],
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PublicSubnet2/NATGateway"
   }
  },
  "MyVPCPrivateSubnet1Subnet641543F4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PrivateSubnet1/Subnet"
   }
  },
  "MyVPCPrivateSubnet1RouteTable133BD901": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PrivateSubnet1/RouteTable"
   }
  },
  "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVPCPrivateSubnet1RouteTable133BD901"
    },
    "SubnetId": {
     "Ref": "MyVPCPrivateSubnet1Subnet641543F4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "MyVPCPrivateSubnet1DefaultRouteA8EE6636": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyVPCPublicSubnet1NATGateway838228A5"
    },
    "RouteTableId": {
     "Ref": "MyVPCPrivateSubnet1RouteTable133BD901"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PrivateSubnet1/DefaultRoute"
   }
  },
  "MyVPCPrivateSubnet2SubnetA420D3F0": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PrivateSubnet2/Subnet"
   }
  },
  "MyVPCPrivateSubnet2RouteTableDF3CB76C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PrivateSubnet2/RouteTable"
   }
  },
  "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVPCPrivateSubnet2RouteTableDF3CB76C"
    },
    "SubnetId": {
     "Ref": "MyVPCPrivateSubnet2SubnetA420D3F0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "MyVPCPrivateSubnet2DefaultRoute37F90B5D": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyVPCPublicSubnet2NATGateway4D6E78B8"
    },
    "RouteTableId": {
     "Ref": "MyVPCPrivateSubnet2RouteTableDF3CB76C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/PrivateSubnet2/DefaultRoute"
   }
  },
  "MyVPCIGW30AB6DD6": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "TsReferenceStack/MyVPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/IGW"
   }
  },
  "MyVPCVPCGWE6F260E1": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "MyVPCIGW30AB6DD6"
    },
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/MyVPC/VPCGW"
   }
  },
  "IncomingMessages6C262C30": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "QueueName": "support-cases-incoming-messages",
    "ReceiveMessageWaitTimeSeconds": 20,
    "VisibilityTimeout": 120
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/IncomingMessages/Resource"
   }
  },
  "OutgoingMessages5C9CDD8F": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "TopicName": "support-cases-outgoing-messages"
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/OutgoingMessages/Resource"
   }
  },
  "OperationalDBSubnetGroup8E6CDDBF": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for OperationalDB database",
    "SubnetIds": [
     {
      "Ref": "MyVPCPrivateSubnet1Subnet641543F4"
     },
     {
      "Ref": "MyVPCPrivateSubnet2SubnetA420D3F0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/OperationalDB/SubnetGroup/Default"
   }
  },
  "OperationalDBSecurityGroup85F46778": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for OperationalDB database",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/OperationalDB/SecurityGroup/Resource"
   }
  },
  "OperationalDBSecurityGroupfromTsReferenceStackEC2SecurityGroup53BBB47554325E70503D": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from TsReferenceStackEC2SecurityGroup53BBB475:5432",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "OperationalDBSecurityGroup85F46778",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "EC2SecurityGroup05DEE054",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/OperationalDB/SecurityGroup/from TsReferenceStackEC2SecurityGroup53BBB475:5432"
   }
  },
  "TsReferenceStackOperationalDBSecretCCACE89E3fdaad7efa858a3daf9490cf0a702aeb": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"appuser\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/OperationalDB/Secret/Resource"
   }
  },
  "OperationalDBSecretAttachment67C5C79D": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "TsReferenceStackOperationalDBSecretCCACE89E3fdaad7efa858a3daf9490cf0a702aeb"
    },
    "TargetId": {
     "Ref": "OperationalDB099B0D55"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/OperationalDB/Secret/Attachment/Resource"
   }
  },
  "OperationalDB099B0D55": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "20",
    "BackupRetentionPeriod": 1,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t4g.micro",
    "DBName": "supportCasesDB",
    "DBSubnetGroupName": {
     "Ref": "OperationalDBSubnetGroup8E6CDDBF"
    },
    "DeleteAutomatedBackups": true,
    "DeletionProtection": false,
    "Engine": "postgres",
    "EngineVersion": "16",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "TsReferenceStackOperationalDBSecretCCACE89E3fdaad7efa858a3daf9490cf0a702aeb"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": "appuser",
    "MaxAllocatedStorage": 25,
    "PubliclyAccessible": false,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "OperationalDBSecurityGroup85F46778",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/OperationalDB/Resource"
   }
  },
  "HelloWorldServiceRoleF3F7D8B0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "MyVPCPrivateSubnet1DefaultRouteA8EE6636",
    "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB",
    "MyVPCPrivateSubnet2DefaultRoute37F90B5D",
    "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE"
   ],
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/HelloWorld/ServiceRole/Resource"
   }
  },
  "HelloWorldServiceRoleDefaultPolicy48EEDBD5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "OperationalDBSecretAttachment67C5C79D"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "HelloWorldServiceRoleDefaultPolicy48EEDBD5",
    "Roles": [
     {
      "Ref": "HelloWorldServiceRoleF3F7D8B0"
     }
    ]
   },
   "DependsOn": [
    "MyVPCPrivateSubnet1DefaultRouteA8EE6636",
    "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB",
    "MyVPCPrivateSubnet2DefaultRoute37F90B5D",
    "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE"
   ],
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/HelloWorld/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "HelloWorldSecurityGroup315EF3C1": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for Lambda Function TsReferenceStackHelloWorld5D3B1236",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "DependsOn": [
    "MyVPCPrivateSubnet1DefaultRouteA8EE6636",
    "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB",
    "MyVPCPrivateSubnet2DefaultRoute37F90B5D",
    "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE"
   ],
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/HelloWorld/SecurityGroup/Resource"
   }
  },
  "HelloWorld7964D1E8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "698b833d1b78c171fb7bfd67b87952317d96d9e90e9ec68c13f355492c9980d0.zip"
    },
    "Environment": {
     "Variables": {
      "INCOMING_MESSAGES_QUEUE_ARN": {
       "Fn::GetAtt": [
        "IncomingMessages6C262C30",
        "Arn"
       ]
      },
      "OUTGOING_MESSAGES_TOPIC_ARN": {
       "Ref": "OutgoingMessages5C9CDD8F"
      },
      "DB_HOST": {
       "Fn::GetAtt": [
        "OperationalDB099B0D55",
        "Endpoint.Address"
       ]
      },
      "DB_PORT": {
       "Fn::GetAtt": [
        "OperationalDB099B0D55",
        "Endpoint.Port"
       ]
      },
      "DB_USER": "appuser",
      "DB_SECRET_ARN": {
       "Ref": "OperationalDBSecretAttachment67C5C79D"
      }
     }
    },
    "Handler": "bundle.handler",
    "Role": {
     "Fn::GetAtt": [
      "HelloWorldServiceRoleF3F7D8B0",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 300,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "HelloWorldSecurityGroup315EF3C1",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "MyVPCPrivateSubnet1Subnet641543F4"
      },
      {
       "Ref": "MyVPCPrivateSubnet2SubnetA420D3F0"
      }
     ]
    }
   },
   "DependsOn": [
    "HelloWorldServiceRoleDefaultPolicy48EEDBD5",
    "HelloWorldServiceRoleF3F7D8B0",
    "MyVPCPrivateSubnet1DefaultRouteA8EE6636",
    "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB",
    "MyVPCPrivateSubnet2DefaultRoute37F90B5D",
    "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE"
   ],
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/HelloWorld/Resource",
    "aws:asset:path": "asset.698b833d1b78c171fb7bfd67b87952317d96d9e90e9ec68c13f355492c9980d0",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "EC2SecurityGroup05DEE054": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "TsReferenceStack/EC2SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow SSH access from your local computer",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     }
    ],
    "VpcId": {
     "Ref": "MyVPCAFB07A31"
    }
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/EC2SecurityGroup/Resource"
   }
  },
  "VpcBastionHostInstanceRoleC99B4E34": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TsReferenceStack/VpcBastionHost"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/VpcBastionHost/InstanceRole/Resource"
   }
  },
  "VpcBastionHostInstanceProfile60D80800": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "VpcBastionHostInstanceRoleC99B4E34"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/VpcBastionHost/InstanceProfile"
   }
  },
  "VpcBastionHost7BBCE9AF": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "VpcBastionHostInstanceProfile60D80800"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t3.micro",
    "KeyName": "evilton-dev",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "EC2SecurityGroup05DEE054",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "MyVPCPublicSubnet1Subnet0C75866A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "TsReferenceStack/VpcBastionHost"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash"
    }
   },
   "DependsOn": [
    "VpcBastionHostInstanceRoleC99B4E34"
   ],
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/VpcBastionHost/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31Sy27jMAz8lr0r6ib5gjy6RS5dNw56LWiZcdXYVFakGhSC/31hqbaDPexpRqMBOaS00sv1Uv/8ATdemPqyaG2lYylgLgpu/BbRrHR8vRq1O9NrsVNFqFprylARyqDN7OiC4AmqFmd91jbMzlgQ62gyD+TxUAzwDPIEgjf4UoW3nyA4Fz6QoCecDDnJ92kjAua9QxJVogneyteTd+GaMvxXOFDjkVkdiAXIYG6Vea/4D+v4EjAkPZFeMbGOJ3e1aR2J9MrXrOMeBCpgnIrl+FPn/fZeGN0lGp9n3G/vWieVOyBo0OuYgw/GDCfwDcrd4JPh35tetdBVNej4K5AZdz/yXlnodDy6/GIJC9dak1Y8szFZ4d3ZtkPA9Rswo7DeDKB4rbfBXFC2wNirI7IL3qBKt6VAY6lJJcFDh4J+OPwOcg3544z+3Zl2jmqbw5GrUX/ww+dqqYcf+sHWLnwgsR3qY8a/HvLvxr4CAAA="
   },
   "Metadata": {
    "aws:cdk:path": "TsReferenceStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "BastionHostPublicIp": {
   "Value": {
    "Fn::GetAtt": [
     "VpcBastionHost7BBCE9AF",
     "PublicIp"
    ]
   }
  },
  "IncomingMessagesQueueArn": {
   "Value": {
    "Fn::GetAtt": [
     "IncomingMessages6C262C30",
     "Arn"
    ]
   }
  },
  "OutgoingMessagesTopicArn": {
   "Value": {
    "Ref": "OutgoingMessages5C9CDD8F"
   }
  },
  "DatabaseEndpoint": {
   "Value": {
    "Fn::GetAtt": [
     "OperationalDB099B0D55",
     "Endpoint.Address"
    ]
   }
  },
  "DatabasePort": {
   "Value": {
    "Fn::GetAtt": [
     "OperationalDB099B0D55",
     "Endpoint.Port"
    ]
   }
  },
  "DatabaseSecretArn": {
   "Value": {
    "Ref": "OperationalDBSecretAttachment67C5C79D"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}